{"ast":null,"code":"var _jsxFileName = \"/Users/solomonrojer/Desktop/Patrick/Portfolio/portfolio/src/components/Navbar.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Navbar, Nav, Container, Button } from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport './MyNavbar.css'; // Import your CSS file for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyNavbar = () => {\n  _s();\n  const [currentDateTime, setCurrentDateTime] = useState(\"\");\n  const [isDarkMode, setIsDarkMode] = useState(false); // State for dark mode\n\n  // Function to update the current date and time\n  const updateDateTime = () => {\n    const now = new Date();\n    const options = {\n      weekday: 'short',\n      month: 'short',\n      day: 'numeric'\n    };\n    const formattedDate = now.toLocaleDateString(\"en-US\", options);\n    const formattedTime = now.toLocaleTimeString(\"en-US\", {\n      hour: \"2-digit\",\n      minute: \"2-digit\",\n      second: \"2-digit\"\n    });\n    setCurrentDateTime(`${formattedDate} | ${formattedTime}`); // Adding separator here\n  };\n\n  // Update the date and time every second\n  useEffect(() => {\n    updateDateTime(); // Initial call\n    const intervalId = setInterval(updateDateTime, 1000); // Update every second\n    return () => clearInterval(intervalId); // Cleanup on unmount\n  }, []);\n  const scrollToSection = id => {\n    const section = document.getElementById(id);\n    if (section) {\n      section.scrollIntoView({\n        behavior: \"smooth\"\n      });\n    }\n  };\n\n  // Function to toggle the dark mode\n  const toggleDarkMode = () => {\n    setIsDarkMode(!isDarkMode);\n  };\n  return /*#__PURE__*/_jsxDEV(Navbar, {\n    expand: \"lg\",\n    className: `navbar-light bg-light ${isDarkMode ? \"bg-dark text-light\" : \"\"}`,\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Navbar.Brand, {\n        href: \"#home\",\n        children: [currentDateTime, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Navbar.Toggle, {\n        \"aria-controls\": \"basic-navbar-nav\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Navbar.Collapse, {\n        id: \"basic-navbar-nav\",\n        children: /*#__PURE__*/_jsxDEV(Nav, {\n          className: \"ms-auto\",\n          children: [/*#__PURE__*/_jsxDEV(Nav.Link, {\n            onClick: () => scrollToSection(\"about\"),\n            children: \"About\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Nav.Link, {\n            onClick: () => scrollToSection(\"skills\"),\n            children: \"Skills\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Nav.Link, {\n            onClick: () => scrollToSection(\"projects\"),\n            children: \"Projects\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Nav.Link, {\n            onClick: () => scrollToSection(\"contact\"),\n            children: \"Contact\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: isDarkMode ? \"light\" : \"dark\",\n            onClick: toggleDarkMode,\n            className: \"ms-2\",\n            children: isDarkMode ? \"Day Mode\" : \"Night Mode\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(MyNavbar, \"MJW2qah1Xp8CtwfVw58xH93Sy0k=\");\n_c = MyNavbar;\nexport default MyNavbar;\nvar _c;\n$RefreshReg$(_c, \"MyNavbar\");","map":{"version":3,"names":["React","useState","useEffect","Navbar","Nav","Container","Button","jsxDEV","_jsxDEV","MyNavbar","_s","currentDateTime","setCurrentDateTime","isDarkMode","setIsDarkMode","updateDateTime","now","Date","options","weekday","month","day","formattedDate","toLocaleDateString","formattedTime","toLocaleTimeString","hour","minute","second","intervalId","setInterval","clearInterval","scrollToSection","id","section","document","getElementById","scrollIntoView","behavior","toggleDarkMode","expand","className","children","Brand","href","fileName","_jsxFileName","lineNumber","columnNumber","Toggle","Collapse","Link","onClick","variant","_c","$RefreshReg$"],"sources":["/Users/solomonrojer/Desktop/Patrick/Portfolio/portfolio/src/components/Navbar.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Navbar, Nav, Container, Button } from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport './MyNavbar.css'; // Import your CSS file for styling\n\nconst MyNavbar = () => {\n  const [currentDateTime, setCurrentDateTime] = useState(\"\");\n  const [isDarkMode, setIsDarkMode] = useState(false); // State for dark mode\n\n  // Function to update the current date and time\n  const updateDateTime = () => {\n    const now = new Date();\n    const options = { weekday: 'short', month: 'short', day: 'numeric' };\n    const formattedDate = now.toLocaleDateString(\"en-US\", options);\n    const formattedTime = now.toLocaleTimeString(\"en-US\", {\n      hour: \"2-digit\",\n      minute: \"2-digit\",\n      second: \"2-digit\",\n    });\n    setCurrentDateTime(`${formattedDate} | ${formattedTime}`); // Adding separator here\n  };\n\n  // Update the date and time every second\n  useEffect(() => {\n    updateDateTime(); // Initial call\n    const intervalId = setInterval(updateDateTime, 1000); // Update every second\n    return () => clearInterval(intervalId); // Cleanup on unmount\n  }, []);\n\n  const scrollToSection = (id) => {\n    const section = document.getElementById(id);\n    if (section) {\n      section.scrollIntoView({ behavior: \"smooth\" });\n    }\n  };\n\n  // Function to toggle the dark mode\n  const toggleDarkMode = () => {\n    setIsDarkMode(!isDarkMode);\n  };\n\n  return (\n    <Navbar expand=\"lg\" className={`navbar-light bg-light ${isDarkMode ? \"bg-dark text-light\" : \"\"}`}>\n      <Container>\n        <Navbar.Brand href=\"#home\">\n          {currentDateTime} {/* Display current date and time */}\n        </Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"ms-auto\">\n            <Nav.Link onClick={() => scrollToSection(\"about\")}>About</Nav.Link>\n            <Nav.Link onClick={() => scrollToSection(\"skills\")}>Skills</Nav.Link>\n            <Nav.Link onClick={() => scrollToSection(\"projects\")}>Projects</Nav.Link>\n            <Nav.Link onClick={() => scrollToSection(\"contact\")}>Contact</Nav.Link>\n            <Button variant={isDarkMode ? \"light\" : \"dark\"} onClick={toggleDarkMode} className=\"ms-2\">\n              {isDarkMode ? \"Day Mode\" : \"Night Mode\"}\n            </Button>\n          </Nav>\n        </Navbar.Collapse>\n      </Container>\n    </Navbar>\n  );\n};\n\nexport default MyNavbar;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,MAAM,EAAEC,GAAG,EAAEC,SAAS,EAAEC,MAAM,QAAQ,iBAAiB;AAChE,OAAO,sCAAsC;AAC7C,OAAO,gBAAgB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzB,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACY,UAAU,EAAEC,aAAa,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;;EAErD;EACA,MAAMc,cAAc,GAAGA,CAAA,KAAM;IAC3B,MAAMC,GAAG,GAAG,IAAIC,IAAI,CAAC,CAAC;IACtB,MAAMC,OAAO,GAAG;MAAEC,OAAO,EAAE,OAAO;MAAEC,KAAK,EAAE,OAAO;MAAEC,GAAG,EAAE;IAAU,CAAC;IACpE,MAAMC,aAAa,GAAGN,GAAG,CAACO,kBAAkB,CAAC,OAAO,EAAEL,OAAO,CAAC;IAC9D,MAAMM,aAAa,GAAGR,GAAG,CAACS,kBAAkB,CAAC,OAAO,EAAE;MACpDC,IAAI,EAAE,SAAS;MACfC,MAAM,EAAE,SAAS;MACjBC,MAAM,EAAE;IACV,CAAC,CAAC;IACFhB,kBAAkB,CAAC,GAAGU,aAAa,MAAME,aAAa,EAAE,CAAC,CAAC,CAAC;EAC7D,CAAC;;EAED;EACAtB,SAAS,CAAC,MAAM;IACda,cAAc,CAAC,CAAC,CAAC,CAAC;IAClB,MAAMc,UAAU,GAAGC,WAAW,CAACf,cAAc,EAAE,IAAI,CAAC,CAAC,CAAC;IACtD,OAAO,MAAMgB,aAAa,CAACF,UAAU,CAAC,CAAC,CAAC;EAC1C,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMG,eAAe,GAAIC,EAAE,IAAK;IAC9B,MAAMC,OAAO,GAAGC,QAAQ,CAACC,cAAc,CAACH,EAAE,CAAC;IAC3C,IAAIC,OAAO,EAAE;MACXA,OAAO,CAACG,cAAc,CAAC;QAAEC,QAAQ,EAAE;MAAS,CAAC,CAAC;IAChD;EACF,CAAC;;EAED;EACA,MAAMC,cAAc,GAAGA,CAAA,KAAM;IAC3BzB,aAAa,CAAC,CAACD,UAAU,CAAC;EAC5B,CAAC;EAED,oBACEL,OAAA,CAACL,MAAM;IAACqC,MAAM,EAAC,IAAI;IAACC,SAAS,EAAE,yBAAyB5B,UAAU,GAAG,oBAAoB,GAAG,EAAE,EAAG;IAAA6B,QAAA,eAC/FlC,OAAA,CAACH,SAAS;MAAAqC,QAAA,gBACRlC,OAAA,CAACL,MAAM,CAACwC,KAAK;QAACC,IAAI,EAAC,OAAO;QAAAF,QAAA,GACvB/B,eAAe,EAAC,GAAC;MAAA;QAAAkC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,eACfxC,OAAA,CAACL,MAAM,CAAC8C,MAAM;QAAC,iBAAc;MAAkB;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAClDxC,OAAA,CAACL,MAAM,CAAC+C,QAAQ;QAACjB,EAAE,EAAC,kBAAkB;QAAAS,QAAA,eACpClC,OAAA,CAACJ,GAAG;UAACqC,SAAS,EAAC,SAAS;UAAAC,QAAA,gBACtBlC,OAAA,CAACJ,GAAG,CAAC+C,IAAI;YAACC,OAAO,EAAEA,CAAA,KAAMpB,eAAe,CAAC,OAAO,CAAE;YAAAU,QAAA,EAAC;UAAK;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAU,CAAC,eACnExC,OAAA,CAACJ,GAAG,CAAC+C,IAAI;YAACC,OAAO,EAAEA,CAAA,KAAMpB,eAAe,CAAC,QAAQ,CAAE;YAAAU,QAAA,EAAC;UAAM;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAU,CAAC,eACrExC,OAAA,CAACJ,GAAG,CAAC+C,IAAI;YAACC,OAAO,EAAEA,CAAA,KAAMpB,eAAe,CAAC,UAAU,CAAE;YAAAU,QAAA,EAAC;UAAQ;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAU,CAAC,eACzExC,OAAA,CAACJ,GAAG,CAAC+C,IAAI;YAACC,OAAO,EAAEA,CAAA,KAAMpB,eAAe,CAAC,SAAS,CAAE;YAAAU,QAAA,EAAC;UAAO;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAU,CAAC,eACvExC,OAAA,CAACF,MAAM;YAAC+C,OAAO,EAAExC,UAAU,GAAG,OAAO,GAAG,MAAO;YAACuC,OAAO,EAAEb,cAAe;YAACE,SAAS,EAAC,MAAM;YAAAC,QAAA,EACtF7B,UAAU,GAAG,UAAU,GAAG;UAAY;YAAAgC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACjC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACS,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEb,CAAC;AAACtC,EAAA,CAzDID,QAAQ;AAAA6C,EAAA,GAAR7C,QAAQ;AA2Dd,eAAeA,QAAQ;AAAC,IAAA6C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}