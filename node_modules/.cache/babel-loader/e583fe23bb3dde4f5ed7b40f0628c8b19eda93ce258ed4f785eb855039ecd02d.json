{"ast":null,"code":"var _jsxFileName = \"/Users/solomonrojer/Desktop/Patrick/Personal-portfolio/src/components/Navbar.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Navbar, Nav, Container, Button } from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./../style/navbar.css\";\nimport \"./../style/darkmode.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyNavbar = ({\n  isDarkMode,\n  toggleDarkMode\n}) => {\n  _s();\n  const [currentDateTime, setCurrentDateTime] = useState({\n    date: \"\",\n    time: \"\"\n  });\n\n  // Function to update the current date and time\n  const updateDateTime = () => {\n    const now = new Date();\n    const userTimeZone = Intl.DateTimeFormat().resolvedOptions().timeZone;\n    const formattedDate = now.toLocaleDateString(\"en-US\", {\n      weekday: \"short\",\n      month: \"short\",\n      day: \"numeric\",\n      timeZone: userTimeZone\n    });\n    const formattedTime = now.toLocaleTimeString(\"en-US\", {\n      hour: \"2-digit\",\n      minute: \"2-digit\",\n      second: \"2-digit\",\n      hour12: true,\n      timeZone: userTimeZone\n    });\n    setCurrentDateTime({\n      date: formattedDate,\n      time: formattedTime\n    });\n  };\n  useEffect(() => {\n    updateDateTime(); // Initial call\n    const intervalId = setInterval(updateDateTime, 1000);\n    return () => clearInterval(intervalId);\n  }, []);\n\n  // Scroll to section function\n  const scrollToSection = sectionId => {\n    const section = document.getElementById(sectionId);\n    if (section) {\n      section.scrollIntoView({\n        behavior: \"smooth\",\n        block: \"start\"\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Navbar, {\n    expand: \"lg\",\n    className: isDarkMode ? \"navbar-dark bg-dark\" : \"navbar-light bg-light\",\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Navbar.Brand, {\n        href: \"#home\",\n        className: `navbar-brand ${isDarkMode ? \"dark-mode\" : \"light-mode\"}`,\n        children: [currentDateTime.date, \" | \", currentDateTime.time]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Navbar.Toggle, {\n        \"aria-controls\": \"basic-navbar-nav\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Navbar.Collapse, {\n        id: \"basic-navbar-nav\",\n        children: /*#__PURE__*/_jsxDEV(Nav, {\n          className: \"ms-auto d-none d-lg-flex\",\n          children: [/*#__PURE__*/_jsxDEV(Nav.Link, {\n            onClick: () => scrollToSection(\"about\"),\n            className: isDarkMode ? \"text-light\" : \"text-dark\",\n            style: {\n              margin: \"22px\",\n              fontSize: \"30px\"\n            },\n            children: \"About\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Nav.Link, {\n            onClick: () => scrollToSection(\"skills\"),\n            className: isDarkMode ? \"text-light\" : \"text-dark\",\n            style: {\n              margin: \"22px\",\n              fontSize: \"30px\"\n            },\n            children: \"Skills\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Nav.Link, {\n            onClick: () => scrollToSection(\"projects\"),\n            className: isDarkMode ? \"text-light\" : \"text-dark\",\n            style: {\n              margin: \"22px\",\n              fontSize: \"30px\"\n            },\n            children: \"Projects\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Nav.Link, {\n            onClick: () => scrollToSection(\"contact\"),\n            className: isDarkMode ? \"text-light\" : \"text-dark\",\n            style: {\n              margin: \"22px\",\n              fontSize: \"30px\"\n            },\n            children: \"Contact\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ms-auto\",\n        children: isDarkMode ? /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"light\",\n          onClick: toggleDarkMode,\n          className: \"button day-mode\",\n          style: {\n            width: \"123px\",\n            height: \"47px\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              height: \"24px\",\n              left: \"63px\",\n              fontSize: \"16px\"\n            },\n            children: \"BATMAN\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"light\",\n          onClick: toggleDarkMode,\n          className: \"button\",\n          style: {\n            width: \"140px\",\n            height: \"50px\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              width: \"109px\",\n              height: \"22px\"\n            },\n            children: \"call the batman\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(MyNavbar, \"0Cr2kLAbDmvhEryy/ThvBfB58ek=\");\n_c = MyNavbar;\nexport default MyNavbar;\nvar _c;\n$RefreshReg$(_c, \"MyNavbar\");","map":{"version":3,"names":["React","useState","useEffect","Navbar","Nav","Container","Button","jsxDEV","_jsxDEV","MyNavbar","isDarkMode","toggleDarkMode","_s","currentDateTime","setCurrentDateTime","date","time","updateDateTime","now","Date","userTimeZone","Intl","DateTimeFormat","resolvedOptions","timeZone","formattedDate","toLocaleDateString","weekday","month","day","formattedTime","toLocaleTimeString","hour","minute","second","hour12","intervalId","setInterval","clearInterval","scrollToSection","sectionId","section","document","getElementById","scrollIntoView","behavior","block","expand","className","children","Brand","href","fileName","_jsxFileName","lineNumber","columnNumber","Toggle","Collapse","id","Link","onClick","style","margin","fontSize","variant","width","height","left","_c","$RefreshReg$"],"sources":["/Users/solomonrojer/Desktop/Patrick/Personal-portfolio/src/components/Navbar.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Navbar, Nav, Container, Button } from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./../style/navbar.css\";\nimport \"./../style/darkmode.css\";\n\nconst MyNavbar = ({ isDarkMode, toggleDarkMode }) => {\n  const [currentDateTime, setCurrentDateTime] = useState({ date: \"\", time: \"\" });\n\n  // Function to update the current date and time\n  const updateDateTime = () => {\n    const now = new Date();\n    const userTimeZone = Intl.DateTimeFormat().resolvedOptions().timeZone;\n\n    const formattedDate = now.toLocaleDateString(\"en-US\", {\n      weekday: \"short\",\n      month: \"short\",\n      day: \"numeric\",\n      timeZone: userTimeZone,\n    });\n\n    const formattedTime = now.toLocaleTimeString(\"en-US\", {\n      hour: \"2-digit\",\n      minute: \"2-digit\",\n      second: \"2-digit\",\n      hour12: true,\n      timeZone: userTimeZone,\n    });\n\n    setCurrentDateTime({ date: formattedDate, time: formattedTime });\n  };\n\n  useEffect(() => {\n    updateDateTime(); // Initial call\n    const intervalId = setInterval(updateDateTime, 1000);\n    return () => clearInterval(intervalId);\n  }, []);\n\n  // Scroll to section function\n  const scrollToSection = (sectionId) => {\n    const section = document.getElementById(sectionId);\n    if (section) {\n      section.scrollIntoView({ behavior: \"smooth\", block: \"start\" });\n    }\n  };\n\n  return (\n    <Navbar expand=\"lg\" className={isDarkMode ? \"navbar-dark bg-dark\" : \"navbar-light bg-light\"}>\n      <Container>\n        <Navbar.Brand href=\"#home\" className={`navbar-brand ${isDarkMode ? \"dark-mode\" : \"light-mode\"}`}>\n          {currentDateTime.date} | {currentDateTime.time}\n        </Navbar.Brand>\n\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"ms-auto d-none d-lg-flex\">\n            <Nav.Link onClick={() => scrollToSection(\"about\")} className={isDarkMode ? \"text-light\" : \"text-dark\"} style={{ margin: \"22px\", fontSize: \"30px\" }}>\n              About\n            </Nav.Link>\n            <Nav.Link onClick={() => scrollToSection(\"skills\")} className={isDarkMode ? \"text-light\" : \"text-dark\"} style={{ margin: \"22px\", fontSize: \"30px\" }}>\n              Skills\n            </Nav.Link>\n            <Nav.Link onClick={() => scrollToSection(\"projects\")} className={isDarkMode ? \"text-light\" : \"text-dark\"} style={{ margin: \"22px\", fontSize: \"30px\" }}>\n              Projects\n            </Nav.Link>\n            <Nav.Link onClick={() => scrollToSection(\"contact\")} className={isDarkMode ? \"text-light\" : \"text-dark\"} style={{ margin: \"22px\", fontSize: \"30px\" }}>\n              Contact\n            </Nav.Link>\n          </Nav>\n        </Navbar.Collapse>\n\n        {/* Button remains visible on all screen sizes */}\n        <div className=\"ms-auto\">\n          {isDarkMode ? (\n            <Button variant=\"light\" onClick={toggleDarkMode} className=\"button day-mode\" style={{ width: \"123px\", height: \"47px\" }}>\n              <span style={{ height: \"24px\", left: \"63px\", fontSize: \"16px\" }}>BATMAN</span>\n            </Button>\n          ) : (\n            <Button variant=\"light\" onClick={toggleDarkMode} className=\"button\" style={{ width: \"140px\", height: \"50px\" }}>\n              <p style={{ width: \"109px\", height: \"22px\" }}>call the batman</p>\n            </Button>\n          )}\n        </div>\n      </Container>\n    </Navbar>\n  );\n};\n\nexport default MyNavbar;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}