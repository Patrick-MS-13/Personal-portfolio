{"ast":null,"code":"var _jsxFileName = \"/Users/solomonrojer/Desktop/Patrick/Personal-portfolio/src/components/welcome Notes/WelcomeMessage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./WelcomeMessage.css\"; // Import external styles\nimport welcomebell from \"./sound/bell.wav\"; // Import sound file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WelcomeMessage = ({\n  message = \"Welcome to my portfolio!\",\n  delay = 3000,\n  duration = 5000\n}) => {\n  _s();\n  const [showMessage, setShowMessage] = useState(false);\n  const [isUserInteracted, setIsUserInteracted] = useState(false); // Track user interaction\n\n  // Function to handle user interaction (click or keypress)\n  const handleUserInteraction = () => {\n    setIsUserInteracted(true);\n  };\n  useEffect(() => {\n    // Add event listeners for user interaction (click or keypress)\n    window.addEventListener(\"click\", handleUserInteraction);\n    window.addEventListener(\"keydown\", handleUserInteraction);\n\n    // Cleanup event listeners on component unmount\n    return () => {\n      window.removeEventListener(\"click\", handleUserInteraction);\n      window.removeEventListener(\"keydown\", handleUserInteraction);\n    };\n  }, []);\n  useEffect(() => {\n    if (!isUserInteracted) return; // Don't trigger the sound unless the user has interacted\n\n    const sound = new Audio(welcomebell);\n    const timer = setTimeout(() => {\n      setShowMessage(true);\n      sound.play(); // Play sound when message appears\n    }, delay);\n    const hideTimer = setTimeout(() => {\n      setShowMessage(false);\n    }, delay + duration);\n    return () => {\n      clearTimeout(timer);\n      clearTimeout(hideTimer);\n    };\n  }, [isUserInteracted, delay, duration]);\n  if (!showMessage) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"welcome-message\",\n    children: message\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(WelcomeMessage, \"N0iDQerZ+scZIiFxjvcpHcvKKYQ=\");\n_c = WelcomeMessage;\nexport default WelcomeMessage;\nvar _c;\n$RefreshReg$(_c, \"WelcomeMessage\");","map":{"version":3,"names":["React","useState","useEffect","welcomebell","jsxDEV","_jsxDEV","WelcomeMessage","message","delay","duration","_s","showMessage","setShowMessage","isUserInteracted","setIsUserInteracted","handleUserInteraction","window","addEventListener","removeEventListener","sound","Audio","timer","setTimeout","play","hideTimer","clearTimeout","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/solomonrojer/Desktop/Patrick/Personal-portfolio/src/components/welcome Notes/WelcomeMessage.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./WelcomeMessage.css\"; // Import external styles\nimport welcomebell from \"./sound/bell.wav\"; // Import sound file\n\nconst WelcomeMessage = ({ message = \"Welcome to my portfolio!\", delay = 3000, duration = 5000 }) => {\n  const [showMessage, setShowMessage] = useState(false);\n  const [isUserInteracted, setIsUserInteracted] = useState(false); // Track user interaction\n\n  // Function to handle user interaction (click or keypress)\n  const handleUserInteraction = () => {\n    setIsUserInteracted(true);\n  };\n\n  useEffect(() => {\n    // Add event listeners for user interaction (click or keypress)\n    window.addEventListener(\"click\", handleUserInteraction);\n    window.addEventListener(\"keydown\", handleUserInteraction);\n\n    // Cleanup event listeners on component unmount\n    return () => {\n      window.removeEventListener(\"click\", handleUserInteraction);\n      window.removeEventListener(\"keydown\", handleUserInteraction);\n    };\n  }, []);\n\n  useEffect(() => {\n    if (!isUserInteracted) return; // Don't trigger the sound unless the user has interacted\n\n    const sound = new Audio(welcomebell);\n\n    const timer = setTimeout(() => {\n      setShowMessage(true);\n      sound.play(); // Play sound when message appears\n    }, delay);\n\n    const hideTimer = setTimeout(() => {\n      setShowMessage(false);\n    }, delay + duration);\n\n    return () => {\n      clearTimeout(timer);\n      clearTimeout(hideTimer);\n    };\n  }, [isUserInteracted, delay, duration]);\n\n  if (!showMessage) return null;\n\n  return (\n    <div className=\"welcome-message\">\n      {message}\n    </div>\n  );\n};\n\nexport default WelcomeMessage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,sBAAsB,CAAC,CAAC;AAC/B,OAAOC,WAAW,MAAM,kBAAkB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,cAAc,GAAGA,CAAC;EAAEC,OAAO,GAAG,0BAA0B;EAAEC,KAAK,GAAG,IAAI;EAAEC,QAAQ,GAAG;AAAK,CAAC,KAAK;EAAAC,EAAA;EAClG,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACY,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;;EAEjE;EACA,MAAMc,qBAAqB,GAAGA,CAAA,KAAM;IAClCD,mBAAmB,CAAC,IAAI,CAAC;EAC3B,CAAC;EAEDZ,SAAS,CAAC,MAAM;IACd;IACAc,MAAM,CAACC,gBAAgB,CAAC,OAAO,EAAEF,qBAAqB,CAAC;IACvDC,MAAM,CAACC,gBAAgB,CAAC,SAAS,EAAEF,qBAAqB,CAAC;;IAEzD;IACA,OAAO,MAAM;MACXC,MAAM,CAACE,mBAAmB,CAAC,OAAO,EAAEH,qBAAqB,CAAC;MAC1DC,MAAM,CAACE,mBAAmB,CAAC,SAAS,EAAEH,qBAAqB,CAAC;IAC9D,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAENb,SAAS,CAAC,MAAM;IACd,IAAI,CAACW,gBAAgB,EAAE,OAAO,CAAC;;IAE/B,MAAMM,KAAK,GAAG,IAAIC,KAAK,CAACjB,WAAW,CAAC;IAEpC,MAAMkB,KAAK,GAAGC,UAAU,CAAC,MAAM;MAC7BV,cAAc,CAAC,IAAI,CAAC;MACpBO,KAAK,CAACI,IAAI,CAAC,CAAC,CAAC,CAAC;IAChB,CAAC,EAAEf,KAAK,CAAC;IAET,MAAMgB,SAAS,GAAGF,UAAU,CAAC,MAAM;MACjCV,cAAc,CAAC,KAAK,CAAC;IACvB,CAAC,EAAEJ,KAAK,GAAGC,QAAQ,CAAC;IAEpB,OAAO,MAAM;MACXgB,YAAY,CAACJ,KAAK,CAAC;MACnBI,YAAY,CAACD,SAAS,CAAC;IACzB,CAAC;EACH,CAAC,EAAE,CAACX,gBAAgB,EAAEL,KAAK,EAAEC,QAAQ,CAAC,CAAC;EAEvC,IAAI,CAACE,WAAW,EAAE,OAAO,IAAI;EAE7B,oBACEN,OAAA;IAAKqB,SAAS,EAAC,iBAAiB;IAAAC,QAAA,EAC7BpB;EAAO;IAAAqB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV,CAAC;AAACrB,EAAA,CAhDIJ,cAAc;AAAA0B,EAAA,GAAd1B,cAAc;AAkDpB,eAAeA,cAAc;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}