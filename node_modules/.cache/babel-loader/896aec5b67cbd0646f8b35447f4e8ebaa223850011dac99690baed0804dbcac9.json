{"ast":null,"code":"var _jsxFileName = \"/Users/solomonrojer/Desktop/Patrick/Personal-portfolio/src/components/Chat Bot/ChatBot.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './ChatBot.css';\nimport { FaPaperPlane, FaCommentDots } from 'react-icons/fa';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ChatBot = () => {\n  _s();\n  const [messages, setMessages] = useState([{\n    from: 'bot',\n    text: 'Hi there! Ask me anything about Patrick.'\n  }]);\n  const [input, setInput] = useState('');\n  const [isTyping, setIsTyping] = useState(false);\n  const [isOpen, setIsOpen] = useState(false);\n  const [darkMode, setDarkMode] = useState(false);\n  const handleSend = () => {\n    if (input.trim() === '') return;\n    const newMessages = [...messages, {\n      from: 'user',\n      text: input\n    }];\n    setMessages(newMessages);\n    setIsTyping(true);\n    setTimeout(() => {\n      const response = getBotResponse(input.toLowerCase());\n      if (response) {\n        setMessages([...newMessages, {\n          from: 'bot',\n          text: response\n        }]);\n      }\n      setIsTyping(false);\n    }, 700);\n    setInput('');\n  };\n\n  // Then conditionally add class\n  useEffect(() => {\n    document.body.classList.toggle('dark-mode', darkMode);\n  }, [darkMode]);\n  const handleClear = () => {\n    setMessages([{\n      from: 'bot',\n      text: 'Chat cleared. Letâ€™s start over!'\n    }]);\n  };\n  const getBotResponse = message => {\n    if (message.includes('name')) return \"I'm Patrick's personal chatbot!\";\n    if (message.includes('skills') || message.includes('tech')) return \"Patrick knows React, Python, SQL, and loves working with data!\";\n    if (message.includes('contact')) return \"You can contact him through the Contact section of this portfolio!\";\n    if (message.includes('project')) return \"Patrick has built cool projects with React, Data Visualizations, and Time Apps. Check out the Projects section!\";\n    if (message.includes('experience')) return \"He has experience in frontend development and is currently exploring Data Analytics.\";\n    if (message.includes('hello') || message.includes('hi') || message.includes('hey')) return \"Hey there! ðŸ‘‹ How can I assist you?\";\n    if (message.includes('time')) return `Right now it's ${new Date().toLocaleTimeString()}`;\n    if (message.includes('date')) return `Today's date is ${new Date().toLocaleDateString()}`;\n    if (message.includes('clear')) {\n      handleClear();\n      return '';\n    }\n    return \"Hmm... Iâ€™m still learning. Try asking about skills, projects, experience, or how to contact Patrick.\";\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `chatbot-container ${isOpen ? 'open' : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatbox\",\n        children: [messages.map((msg, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message ${msg.from}`,\n          children: msg.text\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 25\n        }, this)), isTyping && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message bot typing\",\n          children: \"Typing...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 34\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-area\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: input,\n          onChange: e => setInput(e.target.value),\n          onKeyDown: e => e.key === 'Enter' && handleSend(),\n          placeholder: \"Type your message...\",\n          id: \"message-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"button\",\n          onClick: handleSend,\n          className: \"send-btn\",\n          id: \"send-btn\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"send-btn\",\n          className: \"send-icon\",\n          children: /*#__PURE__*/_jsxDEV(FaPaperPlane, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"button\",\n        value: \"Clear Chat\",\n        className: \"btn btn-danger clear-btn\",\n        onClick: handleClear\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"button\",\n      value: \"\",\n      onClick: () => setIsOpen(!isOpen),\n      className: \"chat-toggle-btn\",\n      title: \"Open Chat\",\n      style: {\n        background: 'transparent'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"chat-toggle\",\n      className: \"chat-toggle-icon\",\n      children: /*#__PURE__*/_jsxDEV(FaCommentDots, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(ChatBot, \"Vaopbs4aa+OBFYVenYWRPrwmNjc=\");\n_c = ChatBot;\nexport default ChatBot;\nvar _c;\n$RefreshReg$(_c, \"ChatBot\");","map":{"version":3,"names":["React","useState","useEffect","FaPaperPlane","FaCommentDots","jsxDEV","_jsxDEV","Fragment","_Fragment","ChatBot","_s","messages","setMessages","from","text","input","setInput","isTyping","setIsTyping","isOpen","setIsOpen","darkMode","setDarkMode","handleSend","trim","newMessages","setTimeout","response","getBotResponse","toLowerCase","document","body","classList","toggle","handleClear","message","includes","Date","toLocaleTimeString","toLocaleDateString","children","className","map","msg","idx","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","onKeyDown","key","placeholder","id","onClick","htmlFor","title","style","background","_c","$RefreshReg$"],"sources":["/Users/solomonrojer/Desktop/Patrick/Personal-portfolio/src/components/Chat Bot/ChatBot.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './ChatBot.css';\nimport { FaPaperPlane, FaCommentDots } from 'react-icons/fa';\n\nconst ChatBot = () => {\n    const [messages, setMessages] = useState([\n        { from: 'bot', text: 'Hi there! Ask me anything about Patrick.' }\n    ]);\n    const [input, setInput] = useState('');\n    const [isTyping, setIsTyping] = useState(false);\n    const [isOpen, setIsOpen] = useState(false);\n    const [darkMode, setDarkMode] = useState(false);\n\n\n    const handleSend = () => {\n        if (input.trim() === '') return;\n\n        const newMessages = [...messages, { from: 'user', text: input }];\n        setMessages(newMessages);\n        setIsTyping(true);\n\n        setTimeout(() => {\n            const response = getBotResponse(input.toLowerCase());\n            if (response) {\n                setMessages([...newMessages, { from: 'bot', text: response }]);\n            }\n            setIsTyping(false);\n        }, 700);\n\n        setInput('');\n    };\n\n    // Then conditionally add class\n    useEffect(() => {\n        document.body.classList.toggle('dark-mode', darkMode);\n    }, [darkMode]);\n    \n\n    const handleClear = () => {\n        setMessages([{ from: 'bot', text: 'Chat cleared. Letâ€™s start over!' }]);\n    };\n\n    const getBotResponse = (message) => {\n        if (message.includes('name')) return \"I'm Patrick's personal chatbot!\";\n        if (message.includes('skills') || message.includes('tech')) return \"Patrick knows React, Python, SQL, and loves working with data!\";\n        if (message.includes('contact')) return \"You can contact him through the Contact section of this portfolio!\";\n        if (message.includes('project')) return \"Patrick has built cool projects with React, Data Visualizations, and Time Apps. Check out the Projects section!\";\n        if (message.includes('experience')) return \"He has experience in frontend development and is currently exploring Data Analytics.\";\n        if (message.includes('hello') || message.includes('hi') || message.includes('hey')) return \"Hey there! ðŸ‘‹ How can I assist you?\";\n        if (message.includes('time')) return `Right now it's ${new Date().toLocaleTimeString()}`;\n        if (message.includes('date')) return `Today's date is ${new Date().toLocaleDateString()}`;\n        if (message.includes('clear')) {\n            handleClear();\n            return '';\n        }\n\n        return \"Hmm... Iâ€™m still learning. Try asking about skills, projects, experience, or how to contact Patrick.\";\n    };\n\n    return (\n        <>\n            <div className={`chatbot-container ${isOpen ? 'open' : ''}`}>\n                <div className=\"chatbox\">\n                    {messages.map((msg, idx) => (\n                        <div key={idx} className={`message ${msg.from}`}>\n                            {msg.text}\n                        </div>\n                    ))}\n                    {isTyping && <div className=\"message bot typing\">Typing...</div>}\n                </div>\n\n                <div className=\"input-area\">\n                    <input\n                        type=\"text\"\n                        value={input}\n                        onChange={(e) => setInput(e.target.value)}\n                        onKeyDown={(e) => e.key === 'Enter' && handleSend()}\n                        placeholder=\"Type your message...\"\n                        id=\"message-input\"\n                    />\n                    <input\n                        type=\"button\"\n                        onClick={handleSend}\n                        className=\"send-btn\"\n                        id=\"send-btn\"\n                    />\n                    <label htmlFor=\"send-btn\" className=\"send-icon\">\n                        <FaPaperPlane />\n                    </label>\n                </div>\n\n\n                <input\n                    type=\"button\"\n                    value=\"Clear Chat\"\n                    className=\"btn btn-danger clear-btn\"\n                    onClick={handleClear}\n                />\n            </div>\n\n            <input\n                type=\"button\"\n                value=\"\"\n                onClick={() => setIsOpen(!isOpen)}\n                className=\"chat-toggle-btn\"\n                title=\"Open Chat\"\n                style={{ background: 'transparent' }}\n            />\n            <label htmlFor=\"chat-toggle\" className=\"chat-toggle-icon\">\n                <FaCommentDots />\n            </label>\n        </>\n    );\n};\n\nexport default ChatBot;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}