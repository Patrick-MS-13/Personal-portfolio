{"ast":null,"code":"var _jsxFileName = \"/Users/solomonrojer/Desktop/Patrick/Personal-portfolio/src/components/Chat Bot/ChatBot.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './ChatBot.css';\nimport { FaPaperPlane, FaCommentDots } from 'react-icons/fa';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ChatBot = () => {\n  _s();\n  const [messages, setMessages] = useState([{\n    from: 'bot',\n    text: 'Hi there! Ask me anything about Patrick.'\n  }]);\n  const [input, setInput] = useState('');\n  const [isTyping, setIsTyping] = useState(false);\n  const [isOpen, setIsOpen] = useState(false);\n  const [darkMode, setDarkMode] = useState(false);\n  const chatboxRef = React.useRef(null);\n  const [showScrollDown, setShowScrollDown] = useState(false);\n  const scrollToBottom = () => {\n    const chatbox = chatboxRef.current;\n    if (chatbox) {\n      chatbox.scrollTo({\n        top: chatbox.scrollHeight,\n        behavior: 'smooth'\n      });\n    }\n  };\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n  useEffect(() => {\n    const chatbox = chatboxRef.current;\n    if (!chatbox) return;\n    const handleScroll = () => {\n      const atBottom = chatbox.scrollHeight - chatbox.scrollTop <= chatbox.clientHeight + 10;\n      setShowScrollDown(!atBottom);\n    };\n    chatbox.addEventListener('scroll', handleScroll);\n    return () => chatbox.removeEventListener('scroll', handleScroll);\n  }, []);\n  const handleSend = () => {\n    if (input.trim() === '') return;\n    const newMessages = [...messages, {\n      from: 'user',\n      text: input\n    }];\n    setMessages(newMessages);\n    setIsTyping(true);\n    setTimeout(() => {\n      const response = getBotResponse(input.toLowerCase());\n      if (response) {\n        setMessages([...newMessages, {\n          from: 'bot',\n          text: response\n        }]);\n      }\n      setIsTyping(false);\n    }, 700);\n    setInput('');\n  };\n\n  // Then conditionally add class\n  useEffect(() => {\n    document.body.classList.toggle('dark-mode', darkMode);\n  }, [darkMode]);\n  const handleClear = () => {\n    setMessages([{\n      from: 'bot',\n      text: 'Chat cleared. Let’s start over!'\n    }]);\n  };\n  const getBotResponse = message => {\n    const worldTimeZones = {\n      london: 'Europe/London',\n      newyork: 'America/New_York',\n      tokyo: 'Asia/Tokyo',\n      sydney: 'Australia/Sydney',\n      paris: 'Europe/Paris',\n      dubai: 'Asia/Dubai',\n      chennai: 'Asia/Kolkata',\n      singapore: 'Asia/Singapore',\n      toronto: 'America/Toronto',\n      berlin: 'Europe/Berlin'\n    };\n    const mockWeatherData = {\n      london: \"🌧️ Light rain with a high of 14°C\",\n      newyork: \"⛅ Partly cloudy, 21°C\",\n      tokyo: \"🌤️ Mostly sunny, 25°C\",\n      sydney: \"☀️ Sunny and warm, 27°C\",\n      paris: \"🌥️ Cloudy with a chance of showers, 16°C\",\n      dubai: \"🌞 Hot and sunny, 35°C\",\n      chennai: \"🌦️ Humid with occasional rain, 32°C\",\n      singapore: \"🌧️ Thunderstorms expected, 30°C\",\n      toronto: \"❄️ Snow flurries and cold, -2°C\",\n      berlin: \"🌫️ Foggy morning, clearing by noon, 10°C\"\n    };\n    const getTimeInCity = city => {\n      const timeZone = worldTimeZones[city.toLowerCase()];\n      if (timeZone) {\n        const time = new Intl.DateTimeFormat('en-US', {\n          hour: '2-digit',\n          minute: '2-digit',\n          second: '2-digit',\n          timeZone\n        }).format(new Date());\n        return `🕒 The current time in ${city.charAt(0).toUpperCase() + city.slice(1)} is ${time}`;\n      } else {\n        return `🌍 Sorry, I don’t know the time zone for \"${city}\". Try asking for time in London, Tokyo, NewYork, etc.`;\n      }\n    };\n    const getWeatherInCity = city => {\n      const weather = mockWeatherData[city.toLowerCase()];\n      if (weather) {\n        return `🌤️ Current weather in ${city.charAt(0).toUpperCase() + city.slice(1)}: ${weather}`;\n      } else {\n        return `🌍 Sorry, I don’t have weather data for \"${city}\" yet. Try asking about London, Tokyo, or NewYork.`;\n      }\n    };\n\n    // — Chatbot Answers —\n    if (message.includes('name')) return \"I'm Patrick's personal chatbot!\";\n    if (message.includes('skills') || message.includes('tech')) return \"Patrick knows React, Python, SQL, and loves working with data!\";\n    if (message.includes('contact')) return \"You can contact him through the Contact section of this portfolio!\";\n    if (message.includes('project')) return \"Patrick has built cool projects with React, Data Visualizations, and Time Apps. Check out the Projects section!\";\n    if (message.includes('experience')) return \"He has experience in frontend development and is currently exploring Data Analytics.\";\n    if (message.includes('hello') || message.includes('hi') || message.includes('hey')) return \"Hey there! 👋 How can I assist you?\";\n\n    // 🌍 World time\n    if (message.match(/time in\\s+\\w+/)) {\n      const city = message.split(\"time in\")[1].trim();\n      return getTimeInCity(city);\n    }\n    if (message.includes('world time')) {\n      return \"🌍 Try asking 'time in Tokyo' or 'time in NewYork' to get the current time there.\";\n    }\n    if (message.includes('time')) return `Right now it's ${new Date().toLocaleTimeString()}`;\n    if (message.includes('date')) return `Today's date is ${new Date().toLocaleDateString()}`;\n\n    // 🌦️ World weather\n    if (message.match(/weather in\\s+\\w+/)) {\n      var _message$split$;\n      const city = (_message$split$ = message.split(\"weather in\")[1]) === null || _message$split$ === void 0 ? void 0 : _message$split$.trim();\n      return getWeatherInCity(city);\n    }\n    if (message.includes('weather')) return \"🌦️ You can ask something like 'weather in Paris' or 'weather in Dubai'.\";\n    if (message.includes('news') || message.includes('latest news')) return \"📰 Stay tuned! News integration is coming soon. Meanwhile, check your favorite news source for updates.\";\n    if (message.includes('education')) return \"Patrick has a solid foundation in programming and continues to learn through hands-on projects and certifications.\";\n    if (message.includes('hobbies')) return \"Patrick enjoys coding, exploring data, building cool web apps, and diving into new tech.\";\n    if (message.includes('goal') || message.includes('future')) return \"Patrick aims to become a top-tier data analyst and continue building intelligent, user-focused applications.\";\n    if (message.includes('clear')) {\n      handleClear();\n      return '';\n    }\n    return \"Hmm... I’m still learning. Try asking about skills, world weather, world time, or how to contact Patrick.\";\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `chatbot-container ${isOpen ? 'open' : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatbox\",\n        ref: chatboxRef,\n        children: [messages.map((msg, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message ${msg.from}`,\n          children: msg.text\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 25\n        }, this)), isTyping && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message bot typing\",\n          children: \"Typing...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 34\n        }, this), showScrollDown && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"scroll-down-hint\",\n          onClick: scrollToBottom,\n          title: \"Scroll to latest\",\n          children: /*#__PURE__*/_jsxDEV(\"svg\", {\n            fill: \"#ffffff\",\n            version: \"1.1\",\n            xmlns: \"http://www.w3.org/2000/svg\",\n            width: \"28px\",\n            height: \"28px\",\n            viewBox: \"-42 -42 184.00 184.00\",\n            stroke: \"#ffffff\",\n            strokeWidth: \"0.001\",\n            children: /*#__PURE__*/_jsxDEV(\"g\", {\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                d: \"M50.5,19.881c-1.104,0-2,0.896-2,2V72.17L33.193,56.609c-0.781-0.781-1.922-0.781-2.703,0  c-0.781,0.78-0.719,2.047,0.062,2.828l18.883,18.857c0.375,0.375,0.899,0.586,1.43,0.586s1.047-0.211,1.422-0.586l18.857-18.857  c0.781-0.781,0.783-2.048,0.002-2.828c-0.781-0.781-2.296-0.781-3.077,0L52.5,71.933V21.881 C52.5,20.776,51.604,19.881,50.5,19.881z\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-area\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: input,\n          onChange: e => setInput(e.target.value),\n          onKeyDown: e => e.key === 'Enter' && handleSend(),\n          placeholder: \"Type your message...\",\n          id: \"message-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"button\",\n          onClick: handleSend,\n          className: \"send-btn\",\n          id: \"send-btn\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"send-btn\",\n          className: \"send-icon\",\n          children: /*#__PURE__*/_jsxDEV(FaPaperPlane, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"button\",\n        value: \"Clear Chat\",\n        className: \"btn btn-danger clear-btn\",\n        onClick: handleClear\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setIsOpen(!isOpen),\n      className: \"chat-toggle-btn\",\n      title: \"Open Chat\",\n      children: /*#__PURE__*/_jsxDEV(FaCommentDots, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(ChatBot, \"HdI75Xvof56VLauNsf3TgZIlyv4=\");\n_c = ChatBot;\nexport default ChatBot;\nvar _c;\n$RefreshReg$(_c, \"ChatBot\");","map":{"version":3,"names":["React","useState","useEffect","FaPaperPlane","FaCommentDots","jsxDEV","_jsxDEV","Fragment","_Fragment","ChatBot","_s","messages","setMessages","from","text","input","setInput","isTyping","setIsTyping","isOpen","setIsOpen","darkMode","setDarkMode","chatboxRef","useRef","showScrollDown","setShowScrollDown","scrollToBottom","chatbox","current","scrollTo","top","scrollHeight","behavior","handleScroll","atBottom","scrollTop","clientHeight","addEventListener","removeEventListener","handleSend","trim","newMessages","setTimeout","response","getBotResponse","toLowerCase","document","body","classList","toggle","handleClear","message","worldTimeZones","london","newyork","tokyo","sydney","paris","dubai","chennai","singapore","toronto","berlin","mockWeatherData","getTimeInCity","city","timeZone","time","Intl","DateTimeFormat","hour","minute","second","format","Date","charAt","toUpperCase","slice","getWeatherInCity","weather","includes","match","split","toLocaleTimeString","toLocaleDateString","_message$split$","children","className","ref","map","msg","idx","fileName","_jsxFileName","lineNumber","columnNumber","onClick","title","fill","version","xmlns","width","height","viewBox","stroke","strokeWidth","d","type","value","onChange","e","target","onKeyDown","key","placeholder","id","htmlFor","_c","$RefreshReg$"],"sources":["/Users/solomonrojer/Desktop/Patrick/Personal-portfolio/src/components/Chat Bot/ChatBot.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './ChatBot.css';\nimport { FaPaperPlane, FaCommentDots } from 'react-icons/fa';\n\nconst ChatBot = () => {\n    const [messages, setMessages] = useState([\n        { from: 'bot', text: 'Hi there! Ask me anything about Patrick.' }\n    ]);\n    const [input, setInput] = useState('');\n    const [isTyping, setIsTyping] = useState(false);\n    const [isOpen, setIsOpen] = useState(false);\n    const [darkMode, setDarkMode] = useState(false);\n    const chatboxRef = React.useRef(null);\n    const [showScrollDown, setShowScrollDown] = useState(false);\n\n    const scrollToBottom = () => {\n        const chatbox = chatboxRef.current;\n        if (chatbox) {\n            chatbox.scrollTo({\n                top: chatbox.scrollHeight,\n                behavior: 'smooth',\n            });\n        }\n    };\n    useEffect(() => {\n        scrollToBottom();\n    }, [messages]);\n\n    useEffect(() => {\n        const chatbox = chatboxRef.current;\n        if (!chatbox) return;\n\n        const handleScroll = () => {\n            const atBottom = chatbox.scrollHeight - chatbox.scrollTop <= chatbox.clientHeight + 10;\n            setShowScrollDown(!atBottom);\n        };\n\n        chatbox.addEventListener('scroll', handleScroll);\n        return () => chatbox.removeEventListener('scroll', handleScroll);\n    }, []);\n\n\n    const handleSend = () => {\n        if (input.trim() === '') return;\n\n        const newMessages = [...messages, { from: 'user', text: input }];\n        setMessages(newMessages);\n        setIsTyping(true);\n\n        setTimeout(() => {\n            const response = getBotResponse(input.toLowerCase());\n            if (response) {\n                setMessages([...newMessages, { from: 'bot', text: response }]);\n            }\n            setIsTyping(false);\n        }, 700);\n\n        setInput('');\n    };\n\n    // Then conditionally add class\n    useEffect(() => {\n        document.body.classList.toggle('dark-mode', darkMode);\n    }, [darkMode]);\n\n\n    const handleClear = () => {\n        setMessages([{ from: 'bot', text: 'Chat cleared. Let’s start over!' }]);\n    };\n\n   const getBotResponse = (message) => {\n    const worldTimeZones = {\n        london: 'Europe/London',\n        newyork: 'America/New_York',\n        tokyo: 'Asia/Tokyo',\n        sydney: 'Australia/Sydney',\n        paris: 'Europe/Paris',\n        dubai: 'Asia/Dubai',\n        chennai: 'Asia/Kolkata',\n        singapore: 'Asia/Singapore',\n        toronto: 'America/Toronto',\n        berlin: 'Europe/Berlin'\n    };\n\n    const mockWeatherData = {\n        london: \"🌧️ Light rain with a high of 14°C\",\n        newyork: \"⛅ Partly cloudy, 21°C\",\n        tokyo: \"🌤️ Mostly sunny, 25°C\",\n        sydney: \"☀️ Sunny and warm, 27°C\",\n        paris: \"🌥️ Cloudy with a chance of showers, 16°C\",\n        dubai: \"🌞 Hot and sunny, 35°C\",\n        chennai: \"🌦️ Humid with occasional rain, 32°C\",\n        singapore: \"🌧️ Thunderstorms expected, 30°C\",\n        toronto: \"❄️ Snow flurries and cold, -2°C\",\n        berlin: \"🌫️ Foggy morning, clearing by noon, 10°C\"\n    };\n\n    const getTimeInCity = (city) => {\n        const timeZone = worldTimeZones[city.toLowerCase()];\n        if (timeZone) {\n            const time = new Intl.DateTimeFormat('en-US', {\n                hour: '2-digit',\n                minute: '2-digit',\n                second: '2-digit',\n                timeZone,\n            }).format(new Date());\n            return `🕒 The current time in ${city.charAt(0).toUpperCase() + city.slice(1)} is ${time}`;\n        } else {\n            return `🌍 Sorry, I don’t know the time zone for \"${city}\". Try asking for time in London, Tokyo, NewYork, etc.`;\n        }\n    };\n\n    const getWeatherInCity = (city) => {\n        const weather = mockWeatherData[city.toLowerCase()];\n        if (weather) {\n            return `🌤️ Current weather in ${city.charAt(0).toUpperCase() + city.slice(1)}: ${weather}`;\n        } else {\n            return `🌍 Sorry, I don’t have weather data for \"${city}\" yet. Try asking about London, Tokyo, or NewYork.`;\n        }\n    };\n\n    // — Chatbot Answers —\n    if (message.includes('name')) return \"I'm Patrick's personal chatbot!\";\n    if (message.includes('skills') || message.includes('tech')) return \"Patrick knows React, Python, SQL, and loves working with data!\";\n    if (message.includes('contact')) return \"You can contact him through the Contact section of this portfolio!\";\n    if (message.includes('project')) return \"Patrick has built cool projects with React, Data Visualizations, and Time Apps. Check out the Projects section!\";\n    if (message.includes('experience')) return \"He has experience in frontend development and is currently exploring Data Analytics.\";\n    if (message.includes('hello') || message.includes('hi') || message.includes('hey')) return \"Hey there! 👋 How can I assist you?\";\n\n    // 🌍 World time\n    if (message.match(/time in\\s+\\w+/)) {\n        const city = message.split(\"time in\")[1].trim();\n        return getTimeInCity(city);\n    }\n\n    if (message.includes('world time')) {\n        return \"🌍 Try asking 'time in Tokyo' or 'time in NewYork' to get the current time there.\";\n    }\n\n    if (message.includes('time')) return `Right now it's ${new Date().toLocaleTimeString()}`;\n    if (message.includes('date')) return `Today's date is ${new Date().toLocaleDateString()}`;\n\n    // 🌦️ World weather\n    if (message.match(/weather in\\s+\\w+/)) {\n        const city = message.split(\"weather in\")[1]?.trim();\n        return getWeatherInCity(city);\n    }\n\n    if (message.includes('weather')) return \"🌦️ You can ask something like 'weather in Paris' or 'weather in Dubai'.\";\n\n    if (message.includes('news') || message.includes('latest news')) return \"📰 Stay tuned! News integration is coming soon. Meanwhile, check your favorite news source for updates.\";\n    if (message.includes('education')) return \"Patrick has a solid foundation in programming and continues to learn through hands-on projects and certifications.\";\n    if (message.includes('hobbies')) return \"Patrick enjoys coding, exploring data, building cool web apps, and diving into new tech.\";\n    if (message.includes('goal') || message.includes('future')) return \"Patrick aims to become a top-tier data analyst and continue building intelligent, user-focused applications.\";\n\n    if (message.includes('clear')) {\n        handleClear();\n        return '';\n    }\n\n    return \"Hmm... I’m still learning. Try asking about skills, world weather, world time, or how to contact Patrick.\";\n};\n\n\n    return (\n        <>\n            <div className={`chatbot-container ${isOpen ? 'open' : ''}`}>\n                <div className=\"chatbox\" ref={chatboxRef}>\n                    {messages.map((msg, idx) => (\n                        <div key={idx} className={`message ${msg.from}`}>\n                            {msg.text}\n                        </div>\n                    ))}\n                    {isTyping && <div className=\"message bot typing\">Typing...</div>}\n\n                    {showScrollDown && (\n                        <div className=\"scroll-down-hint\" onClick={scrollToBottom} title=\"Scroll to latest\">\n                            <svg fill=\"#ffffff\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" width=\"28px\" height=\"28px\" viewBox=\"-42 -42 184.00 184.00\" stroke=\"#ffffff\" strokeWidth=\"0.001\">\n                                <g>\n                                    <path d=\"M50.5,19.881c-1.104,0-2,0.896-2,2V72.17L33.193,56.609c-0.781-0.781-1.922-0.781-2.703,0 \n                    c-0.781,0.78-0.719,2.047,0.062,2.828l18.883,18.857c0.375,0.375,0.899,0.586,1.43,0.586s1.047-0.211,1.422-0.586l18.857-18.857 \n                    c0.781-0.781,0.783-2.048,0.002-2.828c-0.781-0.781-2.296-0.781-3.077,0L52.5,71.933V21.881\n                    C52.5,20.776,51.604,19.881,50.5,19.881z\" />\n                                </g>\n                            </svg>\n                        </div>\n                    )}\n\n                </div>\n\n                <div className=\"input-area\">\n                    <input\n                        type=\"text\"\n                        value={input}\n                        onChange={(e) => setInput(e.target.value)}\n                        onKeyDown={(e) => e.key === 'Enter' && handleSend()}\n                        placeholder=\"Type your message...\"\n                        id=\"message-input\"\n                    />\n                    <input\n                        type=\"button\"\n                        onClick={handleSend}\n                        className=\"send-btn\"\n                        id=\"send-btn\"\n                    />\n                    <label htmlFor=\"send-btn\" className=\"send-icon\">\n                        <FaPaperPlane />\n                    </label>\n                </div>\n\n                <input\n                    type=\"button\"\n                    value=\"Clear Chat\"\n                    className=\"btn btn-danger clear-btn\"\n                    onClick={handleClear}\n                />\n            </div>\n\n            <button\n                onClick={() => setIsOpen(!isOpen)}\n                className=\"chat-toggle-btn\"\n                title=\"Open Chat\"\n            >\n                <FaCommentDots />\n            </button>\n        </>\n    );\n};\n\nexport default ChatBot;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,eAAe;AACtB,SAASC,YAAY,EAAEC,aAAa,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE7D,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,CACrC;IAAEY,IAAI,EAAE,KAAK;IAAEC,IAAI,EAAE;EAA2C,CAAC,CACpE,CAAC;EACF,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACgB,QAAQ,EAAEC,WAAW,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACkB,MAAM,EAAEC,SAAS,CAAC,GAAGnB,QAAQ,CAAC,KAAK,CAAC;EAC3C,MAAM,CAACoB,QAAQ,EAAEC,WAAW,CAAC,GAAGrB,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAMsB,UAAU,GAAGvB,KAAK,CAACwB,MAAM,CAAC,IAAI,CAAC;EACrC,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGzB,QAAQ,CAAC,KAAK,CAAC;EAE3D,MAAM0B,cAAc,GAAGA,CAAA,KAAM;IACzB,MAAMC,OAAO,GAAGL,UAAU,CAACM,OAAO;IAClC,IAAID,OAAO,EAAE;MACTA,OAAO,CAACE,QAAQ,CAAC;QACbC,GAAG,EAAEH,OAAO,CAACI,YAAY;QACzBC,QAAQ,EAAE;MACd,CAAC,CAAC;IACN;EACJ,CAAC;EACD/B,SAAS,CAAC,MAAM;IACZyB,cAAc,CAAC,CAAC;EACpB,CAAC,EAAE,CAAChB,QAAQ,CAAC,CAAC;EAEdT,SAAS,CAAC,MAAM;IACZ,MAAM0B,OAAO,GAAGL,UAAU,CAACM,OAAO;IAClC,IAAI,CAACD,OAAO,EAAE;IAEd,MAAMM,YAAY,GAAGA,CAAA,KAAM;MACvB,MAAMC,QAAQ,GAAGP,OAAO,CAACI,YAAY,GAAGJ,OAAO,CAACQ,SAAS,IAAIR,OAAO,CAACS,YAAY,GAAG,EAAE;MACtFX,iBAAiB,CAAC,CAACS,QAAQ,CAAC;IAChC,CAAC;IAEDP,OAAO,CAACU,gBAAgB,CAAC,QAAQ,EAAEJ,YAAY,CAAC;IAChD,OAAO,MAAMN,OAAO,CAACW,mBAAmB,CAAC,QAAQ,EAAEL,YAAY,CAAC;EACpE,CAAC,EAAE,EAAE,CAAC;EAGN,MAAMM,UAAU,GAAGA,CAAA,KAAM;IACrB,IAAIzB,KAAK,CAAC0B,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;IAEzB,MAAMC,WAAW,GAAG,CAAC,GAAG/B,QAAQ,EAAE;MAAEE,IAAI,EAAE,MAAM;MAAEC,IAAI,EAAEC;IAAM,CAAC,CAAC;IAChEH,WAAW,CAAC8B,WAAW,CAAC;IACxBxB,WAAW,CAAC,IAAI,CAAC;IAEjByB,UAAU,CAAC,MAAM;MACb,MAAMC,QAAQ,GAAGC,cAAc,CAAC9B,KAAK,CAAC+B,WAAW,CAAC,CAAC,CAAC;MACpD,IAAIF,QAAQ,EAAE;QACVhC,WAAW,CAAC,CAAC,GAAG8B,WAAW,EAAE;UAAE7B,IAAI,EAAE,KAAK;UAAEC,IAAI,EAAE8B;QAAS,CAAC,CAAC,CAAC;MAClE;MACA1B,WAAW,CAAC,KAAK,CAAC;IACtB,CAAC,EAAE,GAAG,CAAC;IAEPF,QAAQ,CAAC,EAAE,CAAC;EAChB,CAAC;;EAED;EACAd,SAAS,CAAC,MAAM;IACZ6C,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACC,MAAM,CAAC,WAAW,EAAE7B,QAAQ,CAAC;EACzD,CAAC,EAAE,CAACA,QAAQ,CAAC,CAAC;EAGd,MAAM8B,WAAW,GAAGA,CAAA,KAAM;IACtBvC,WAAW,CAAC,CAAC;MAAEC,IAAI,EAAE,KAAK;MAAEC,IAAI,EAAE;IAAkC,CAAC,CAAC,CAAC;EAC3E,CAAC;EAEF,MAAM+B,cAAc,GAAIO,OAAO,IAAK;IACnC,MAAMC,cAAc,GAAG;MACnBC,MAAM,EAAE,eAAe;MACvBC,OAAO,EAAE,kBAAkB;MAC3BC,KAAK,EAAE,YAAY;MACnBC,MAAM,EAAE,kBAAkB;MAC1BC,KAAK,EAAE,cAAc;MACrBC,KAAK,EAAE,YAAY;MACnBC,OAAO,EAAE,cAAc;MACvBC,SAAS,EAAE,gBAAgB;MAC3BC,OAAO,EAAE,iBAAiB;MAC1BC,MAAM,EAAE;IACZ,CAAC;IAED,MAAMC,eAAe,GAAG;MACpBV,MAAM,EAAE,oCAAoC;MAC5CC,OAAO,EAAE,uBAAuB;MAChCC,KAAK,EAAE,wBAAwB;MAC/BC,MAAM,EAAE,yBAAyB;MACjCC,KAAK,EAAE,2CAA2C;MAClDC,KAAK,EAAE,wBAAwB;MAC/BC,OAAO,EAAE,sCAAsC;MAC/CC,SAAS,EAAE,kCAAkC;MAC7CC,OAAO,EAAE,iCAAiC;MAC1CC,MAAM,EAAE;IACZ,CAAC;IAED,MAAME,aAAa,GAAIC,IAAI,IAAK;MAC5B,MAAMC,QAAQ,GAAGd,cAAc,CAACa,IAAI,CAACpB,WAAW,CAAC,CAAC,CAAC;MACnD,IAAIqB,QAAQ,EAAE;QACV,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAACC,cAAc,CAAC,OAAO,EAAE;UAC1CC,IAAI,EAAE,SAAS;UACfC,MAAM,EAAE,SAAS;UACjBC,MAAM,EAAE,SAAS;UACjBN;QACJ,CAAC,CAAC,CAACO,MAAM,CAAC,IAAIC,IAAI,CAAC,CAAC,CAAC;QACrB,OAAO,0BAA0BT,IAAI,CAACU,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,GAAGX,IAAI,CAACY,KAAK,CAAC,CAAC,CAAC,OAAOV,IAAI,EAAE;MAC9F,CAAC,MAAM;QACH,OAAO,6CAA6CF,IAAI,wDAAwD;MACpH;IACJ,CAAC;IAED,MAAMa,gBAAgB,GAAIb,IAAI,IAAK;MAC/B,MAAMc,OAAO,GAAGhB,eAAe,CAACE,IAAI,CAACpB,WAAW,CAAC,CAAC,CAAC;MACnD,IAAIkC,OAAO,EAAE;QACT,OAAO,0BAA0Bd,IAAI,CAACU,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,GAAGX,IAAI,CAACY,KAAK,CAAC,CAAC,CAAC,KAAKE,OAAO,EAAE;MAC/F,CAAC,MAAM;QACH,OAAO,4CAA4Cd,IAAI,oDAAoD;MAC/G;IACJ,CAAC;;IAED;IACA,IAAId,OAAO,CAAC6B,QAAQ,CAAC,MAAM,CAAC,EAAE,OAAO,iCAAiC;IACtE,IAAI7B,OAAO,CAAC6B,QAAQ,CAAC,QAAQ,CAAC,IAAI7B,OAAO,CAAC6B,QAAQ,CAAC,MAAM,CAAC,EAAE,OAAO,gEAAgE;IACnI,IAAI7B,OAAO,CAAC6B,QAAQ,CAAC,SAAS,CAAC,EAAE,OAAO,oEAAoE;IAC5G,IAAI7B,OAAO,CAAC6B,QAAQ,CAAC,SAAS,CAAC,EAAE,OAAO,iHAAiH;IACzJ,IAAI7B,OAAO,CAAC6B,QAAQ,CAAC,YAAY,CAAC,EAAE,OAAO,sFAAsF;IACjI,IAAI7B,OAAO,CAAC6B,QAAQ,CAAC,OAAO,CAAC,IAAI7B,OAAO,CAAC6B,QAAQ,CAAC,IAAI,CAAC,IAAI7B,OAAO,CAAC6B,QAAQ,CAAC,KAAK,CAAC,EAAE,OAAO,qCAAqC;;IAEhI;IACA,IAAI7B,OAAO,CAAC8B,KAAK,CAAC,eAAe,CAAC,EAAE;MAChC,MAAMhB,IAAI,GAAGd,OAAO,CAAC+B,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC1C,IAAI,CAAC,CAAC;MAC/C,OAAOwB,aAAa,CAACC,IAAI,CAAC;IAC9B;IAEA,IAAId,OAAO,CAAC6B,QAAQ,CAAC,YAAY,CAAC,EAAE;MAChC,OAAO,mFAAmF;IAC9F;IAEA,IAAI7B,OAAO,CAAC6B,QAAQ,CAAC,MAAM,CAAC,EAAE,OAAO,kBAAkB,IAAIN,IAAI,CAAC,CAAC,CAACS,kBAAkB,CAAC,CAAC,EAAE;IACxF,IAAIhC,OAAO,CAAC6B,QAAQ,CAAC,MAAM,CAAC,EAAE,OAAO,mBAAmB,IAAIN,IAAI,CAAC,CAAC,CAACU,kBAAkB,CAAC,CAAC,EAAE;;IAEzF;IACA,IAAIjC,OAAO,CAAC8B,KAAK,CAAC,kBAAkB,CAAC,EAAE;MAAA,IAAAI,eAAA;MACnC,MAAMpB,IAAI,IAAAoB,eAAA,GAAGlC,OAAO,CAAC+B,KAAK,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,cAAAG,eAAA,uBAA9BA,eAAA,CAAgC7C,IAAI,CAAC,CAAC;MACnD,OAAOsC,gBAAgB,CAACb,IAAI,CAAC;IACjC;IAEA,IAAId,OAAO,CAAC6B,QAAQ,CAAC,SAAS,CAAC,EAAE,OAAO,0EAA0E;IAElH,IAAI7B,OAAO,CAAC6B,QAAQ,CAAC,MAAM,CAAC,IAAI7B,OAAO,CAAC6B,QAAQ,CAAC,aAAa,CAAC,EAAE,OAAO,yGAAyG;IACjL,IAAI7B,OAAO,CAAC6B,QAAQ,CAAC,WAAW,CAAC,EAAE,OAAO,oHAAoH;IAC9J,IAAI7B,OAAO,CAAC6B,QAAQ,CAAC,SAAS,CAAC,EAAE,OAAO,0FAA0F;IAClI,IAAI7B,OAAO,CAAC6B,QAAQ,CAAC,MAAM,CAAC,IAAI7B,OAAO,CAAC6B,QAAQ,CAAC,QAAQ,CAAC,EAAE,OAAO,8GAA8G;IAEjL,IAAI7B,OAAO,CAAC6B,QAAQ,CAAC,OAAO,CAAC,EAAE;MAC3B9B,WAAW,CAAC,CAAC;MACb,OAAO,EAAE;IACb;IAEA,OAAO,2GAA2G;EACtH,CAAC;EAGG,oBACI7C,OAAA,CAAAE,SAAA;IAAA+E,QAAA,gBACIjF,OAAA;MAAKkF,SAAS,EAAE,qBAAqBrE,MAAM,GAAG,MAAM,GAAG,EAAE,EAAG;MAAAoE,QAAA,gBACxDjF,OAAA;QAAKkF,SAAS,EAAC,SAAS;QAACC,GAAG,EAAElE,UAAW;QAAAgE,QAAA,GACpC5E,QAAQ,CAAC+E,GAAG,CAAC,CAACC,GAAG,EAAEC,GAAG,kBACnBtF,OAAA;UAAekF,SAAS,EAAE,WAAWG,GAAG,CAAC9E,IAAI,EAAG;UAAA0E,QAAA,EAC3CI,GAAG,CAAC7E;QAAI,GADH8E,GAAG;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAER,CACR,CAAC,EACD/E,QAAQ,iBAAIX,OAAA;UAAKkF,SAAS,EAAC,oBAAoB;UAAAD,QAAA,EAAC;QAAS;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,EAE/DvE,cAAc,iBACXnB,OAAA;UAAKkF,SAAS,EAAC,kBAAkB;UAACS,OAAO,EAAEtE,cAAe;UAACuE,KAAK,EAAC,kBAAkB;UAAAX,QAAA,eAC/EjF,OAAA;YAAK6F,IAAI,EAAC,SAAS;YAACC,OAAO,EAAC,KAAK;YAACC,KAAK,EAAC,4BAA4B;YAACC,KAAK,EAAC,MAAM;YAACC,MAAM,EAAC,MAAM;YAACC,OAAO,EAAC,uBAAuB;YAACC,MAAM,EAAC,SAAS;YAACC,WAAW,EAAC,OAAO;YAAAnB,QAAA,eAChKjF,OAAA;cAAAiF,QAAA,eACIjF,OAAA;gBAAMqG,CAAC,EAAC;cAGgB;gBAAAd,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC5B;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CACR;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEA,CAAC,eAEN1F,OAAA;QAAKkF,SAAS,EAAC,YAAY;QAAAD,QAAA,gBACvBjF,OAAA;UACIsG,IAAI,EAAC,MAAM;UACXC,KAAK,EAAE9F,KAAM;UACb+F,QAAQ,EAAGC,CAAC,IAAK/F,QAAQ,CAAC+F,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;UAC1CI,SAAS,EAAGF,CAAC,IAAKA,CAAC,CAACG,GAAG,KAAK,OAAO,IAAI1E,UAAU,CAAC,CAAE;UACpD2E,WAAW,EAAC,sBAAsB;UAClCC,EAAE,EAAC;QAAe;UAAAvB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACrB,CAAC,eACF1F,OAAA;UACIsG,IAAI,EAAC,QAAQ;UACbX,OAAO,EAAEzD,UAAW;UACpBgD,SAAS,EAAC,UAAU;UACpB4B,EAAE,EAAC;QAAU;UAAAvB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChB,CAAC,eACF1F,OAAA;UAAO+G,OAAO,EAAC,UAAU;UAAC7B,SAAS,EAAC,WAAW;UAAAD,QAAA,eAC3CjF,OAAA,CAACH,YAAY;YAAA0F,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACb,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACP,CAAC,eAEN1F,OAAA;QACIsG,IAAI,EAAC,QAAQ;QACbC,KAAK,EAAC,YAAY;QAClBrB,SAAS,EAAC,0BAA0B;QACpCS,OAAO,EAAE9C;MAAY;QAAA0C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,eAEN1F,OAAA;MACI2F,OAAO,EAAEA,CAAA,KAAM7E,SAAS,CAAC,CAACD,MAAM,CAAE;MAClCqE,SAAS,EAAC,iBAAiB;MAC3BU,KAAK,EAAC,WAAW;MAAAX,QAAA,eAEjBjF,OAAA,CAACF,aAAa;QAAAyF,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACb,CAAC;EAAA,eACX,CAAC;AAEX,CAAC;AAACtF,EAAA,CA/NID,OAAO;AAAA6G,EAAA,GAAP7G,OAAO;AAiOb,eAAeA,OAAO;AAAC,IAAA6G,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}