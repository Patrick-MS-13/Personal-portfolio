{"ast":null,"code":"var _jsxFileName = \"/Users/solomonrojer/Desktop/Patrick/Portfolio/portfolio/src/components/ThemeToggle.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './../style/ThemeToggle.css'; // Optional: If you want to add specific styles for the toggle\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThemeToggle = () => {\n  _s();\n  const [isDarkMode, setIsDarkMode] = useState(false);\n\n  // Check and set the initial theme based on localStorage\n  useEffect(() => {\n    const currentTheme = localStorage.getItem('theme');\n    if (currentTheme) {\n      document.documentElement.setAttribute('data-theme', currentTheme);\n      setIsDarkMode(currentTheme === 'dark');\n    }\n  }, []);\n  const handleToggle = () => {\n    const newTheme = !isDarkMode ? 'dark' : 'light';\n    document.documentElement.setAttribute('data-theme', newTheme);\n    localStorage.setItem('theme', newTheme);\n    setIsDarkMode(!isDarkMode);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"top\",\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mode\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: `fas ${isDarkMode ? 'fa-moon' : 'fa-sun'}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: isDarkMode,\n            onChange: handleToggle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"toggle-circle\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      id: \"home\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Custom\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"welcome\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n_s(ThemeToggle, \"bUs4CHDjU8AH+ZZYt8wlh4bHppI=\");\n_c = ThemeToggle;\nexport default ThemeToggle;\nvar _c;\n$RefreshReg$(_c, \"ThemeToggle\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","ThemeToggle","_s","isDarkMode","setIsDarkMode","currentTheme","localStorage","getItem","document","documentElement","setAttribute","handleToggle","newTheme","setItem","id","children","className","fileName","_jsxFileName","lineNumber","columnNumber","type","checked","onChange","_c","$RefreshReg$"],"sources":["/Users/solomonrojer/Desktop/Patrick/Portfolio/portfolio/src/components/ThemeToggle.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './../style/ThemeToggle.css'; // Optional: If you want to add specific styles for the toggle\n\nconst ThemeToggle = () => {\n    const [isDarkMode, setIsDarkMode] = useState(false);\n\n    // Check and set the initial theme based on localStorage\n    useEffect(() => {\n        const currentTheme = localStorage.getItem('theme');\n        if (currentTheme) {\n            document.documentElement.setAttribute('data-theme', currentTheme);\n            setIsDarkMode(currentTheme === 'dark');\n        }\n    }, []);\n\n    const handleToggle = () => {\n        const newTheme = !isDarkMode ? 'dark' : 'light';\n        document.documentElement.setAttribute('data-theme', newTheme);\n        localStorage.setItem('theme', newTheme);\n        setIsDarkMode(!isDarkMode);\n    };\n\n    return (\n        <div id=\"top\">\n            {/* Nav */}\n            <nav>\n                <div className=\"mode\">\n                    <i className={`fas ${isDarkMode ? 'fa-moon' : 'fa-sun'}`}></i>\n                    <label>\n                        <input type=\"checkbox\" checked={isDarkMode} onChange={handleToggle} />\n                        <span className=\"toggle-circle\"></span>\n                    </label>\n                </div>\n            </nav>\n\n            {/* Home */}\n            <section id=\"home\">\n                <h1>Custom</h1>\n                <h2>welcome</h2>\n            </section>\n        </div>\n    );\n};\n\nexport default ThemeToggle;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,4BAA4B,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAErC,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC;;EAEnD;EACAD,SAAS,CAAC,MAAM;IACZ,MAAMQ,YAAY,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAClD,IAAIF,YAAY,EAAE;MACdG,QAAQ,CAACC,eAAe,CAACC,YAAY,CAAC,YAAY,EAAEL,YAAY,CAAC;MACjED,aAAa,CAACC,YAAY,KAAK,MAAM,CAAC;IAC1C;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMM,YAAY,GAAGA,CAAA,KAAM;IACvB,MAAMC,QAAQ,GAAG,CAACT,UAAU,GAAG,MAAM,GAAG,OAAO;IAC/CK,QAAQ,CAACC,eAAe,CAACC,YAAY,CAAC,YAAY,EAAEE,QAAQ,CAAC;IAC7DN,YAAY,CAACO,OAAO,CAAC,OAAO,EAAED,QAAQ,CAAC;IACvCR,aAAa,CAAC,CAACD,UAAU,CAAC;EAC9B,CAAC;EAED,oBACIH,OAAA;IAAKc,EAAE,EAAC,KAAK;IAAAC,QAAA,gBAETf,OAAA;MAAAe,QAAA,eACIf,OAAA;QAAKgB,SAAS,EAAC,MAAM;QAAAD,QAAA,gBACjBf,OAAA;UAAGgB,SAAS,EAAE,OAAOb,UAAU,GAAG,SAAS,GAAG,QAAQ;QAAG;UAAAc,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC9DpB,OAAA;UAAAe,QAAA,gBACIf,OAAA;YAAOqB,IAAI,EAAC,UAAU;YAACC,OAAO,EAAEnB,UAAW;YAACoB,QAAQ,EAAEZ;UAAa;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACtEpB,OAAA;YAAMgB,SAAS,EAAC;UAAe;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,eAGNpB,OAAA;MAASc,EAAE,EAAC,MAAM;MAAAC,QAAA,gBACdf,OAAA;QAAAe,QAAA,EAAI;MAAM;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACfpB,OAAA;QAAAe,QAAA,EAAI;MAAO;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACX,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACT,CAAC;AAEd,CAAC;AAAClB,EAAA,CAvCID,WAAW;AAAAuB,EAAA,GAAXvB,WAAW;AAyCjB,eAAeA,WAAW;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}