{"ast":null,"code":"var _jsxFileName = \"/Users/solomonrojer/Desktop/Patrick/Portfolio/portfolio/src/components/Navbar.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Navbar, Nav, Container, Button } from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport nightmode from \"./../img/night-mode.png\";\nimport \"./../style/navbar.css\";\nimport \"./../style/darkmode.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyNavbar = ({\n  isDarkMode,\n  toggleDarkMode\n}) => {\n  _s();\n  const [currentDateTime, setCurrentDateTime] = useState({\n    date: \"\",\n    time: \"\",\n    period: \"\"\n  });\n\n  // Function to update the current date and time\n  const updateDateTime = () => {\n    const now = new Date();\n    const options = {\n      weekday: \"short\",\n      month: \"short\",\n      day: \"numeric\"\n    };\n    const formattedDate = now.toLocaleDateString(\"en-US\", options);\n    let hours = now.getHours();\n    const period = hours >= 12 ? \"PM\" : \"AM\";\n    hours = hours % 12 || 12; // Convert to 12-hour format\n    const minutes = now.getMinutes().toString().padStart(2, \"0\");\n    const seconds = now.getSeconds().toString().padStart(2, \"0\");\n    const formattedTime = `${hours}:${minutes}:${seconds}`;\n    setCurrentDateTime({\n      date: formattedDate,\n      time: formattedTime,\n      period\n    });\n  };\n\n  // Update the date and time every second\n  useEffect(() => {\n    updateDateTime(); // Initial call\n    const intervalId = setInterval(updateDateTime, 1000);\n    return () => clearInterval(intervalId);\n  }, []);\n  const scrollToSection = id => {\n    const section = document.getElementById(id);\n    if (section) {\n      section.scrollIntoView({\n        behavior: \"smooth\"\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Navbar, {\n    expand: \"lg\",\n    className: `${isDarkMode ? \"navbar-dark bg-dark\" : \"navbar-light bg-light\"}`,\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Navbar.Brand, {\n        href: \"#home\",\n        className: `navbar-brand ${isDarkMode ? \"dark-mode\" : \"light-mode\"}`,\n        children: [currentDateTime.date, \" | \", currentDateTime.time, /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"time-period\",\n          children: currentDateTime.period\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Navbar.Toggle, {\n        \"aria-controls\": \"basic-navbar-nav\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Navbar.Collapse, {\n        id: \"basic-navbar-nav\",\n        children: /*#__PURE__*/_jsxDEV(Nav, {\n          className: \"ms-auto\",\n          children: [/*#__PURE__*/_jsxDEV(Nav.Link, {\n            onClick: () => scrollToSection(\"about\"),\n            className: isDarkMode ? \"text-light\" : \"text-dark\",\n            children: \"About\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Nav.Link, {\n            onClick: () => scrollToSection(\"skills\"),\n            className: isDarkMode ? \"text-light\" : \"text-dark\",\n            children: \"Skills\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Nav.Link, {\n            onClick: () => scrollToSection(\"projects\"),\n            className: isDarkMode ? \"text-light\" : \"text-dark\",\n            children: \"Projects\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Nav.Link, {\n            onClick: () => scrollToSection(\"contact\"),\n            className: isDarkMode ? \"text-light\" : \"text-dark\",\n            children: \"Contact\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this), isDarkMode ? /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"light\",\n            onClick: toggleDarkMode,\n            className: \"button day-mode ms-2\",\n            children: \"Day Mode\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"light\",\n            onClick: toggleDarkMode,\n            className: \"button ms-2\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: nightmode,\n              alt: \"Night Mode\",\n              width: \"60\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(MyNavbar, \"iM7TlenigVPVd2CzLh1AB+WiVeM=\");\n_c = MyNavbar;\nexport default MyNavbar;\nvar _c;\n$RefreshReg$(_c, \"MyNavbar\");","map":{"version":3,"names":["React","useState","useEffect","Navbar","Nav","Container","Button","nightmode","jsxDEV","_jsxDEV","MyNavbar","isDarkMode","toggleDarkMode","_s","currentDateTime","setCurrentDateTime","date","time","period","updateDateTime","now","Date","options","weekday","month","day","formattedDate","toLocaleDateString","hours","getHours","minutes","getMinutes","toString","padStart","seconds","getSeconds","formattedTime","intervalId","setInterval","clearInterval","scrollToSection","id","section","document","getElementById","scrollIntoView","behavior","expand","className","children","Brand","href","fileName","_jsxFileName","lineNumber","columnNumber","Toggle","Collapse","Link","onClick","variant","src","alt","width","_c","$RefreshReg$"],"sources":["/Users/solomonrojer/Desktop/Patrick/Portfolio/portfolio/src/components/Navbar.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Navbar, Nav, Container, Button } from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport nightmode from \"./../img/night-mode.png\";\nimport \"./../style/navbar.css\";\nimport \"./../style/darkmode.css\";\n\nconst MyNavbar = ({ isDarkMode, toggleDarkMode }) => {\n  const [currentDateTime, setCurrentDateTime] = useState({ date: \"\", time: \"\", period: \"\" });\n\n  // Function to update the current date and time\n  const updateDateTime = () => {\n    const now = new Date();\n    const options = { weekday: \"short\", month: \"short\", day: \"numeric\" };\n    const formattedDate = now.toLocaleDateString(\"en-US\", options);\n\n    let hours = now.getHours();\n    const period = hours >= 12 ? \"PM\" : \"AM\";\n    hours = hours % 12 || 12; // Convert to 12-hour format\n    const minutes = now.getMinutes().toString().padStart(2, \"0\");\n    const seconds = now.getSeconds().toString().padStart(2, \"0\");\n\n    const formattedTime = `${hours}:${minutes}:${seconds}`;\n\n    setCurrentDateTime({ date: formattedDate, time: formattedTime, period });\n  };\n\n  // Update the date and time every second\n  useEffect(() => {\n    updateDateTime(); // Initial call\n    const intervalId = setInterval(updateDateTime, 1000);\n    return () => clearInterval(intervalId);\n  }, []);\n\n  const scrollToSection = (id) => {\n    const section = document.getElementById(id);\n    if (section) {\n      section.scrollIntoView({ behavior: \"smooth\" });\n    }\n  };\n\n  return (\n    <Navbar\n      expand=\"lg\"\n      className={`${\n        isDarkMode ? \"navbar-dark bg-dark\" : \"navbar-light bg-light\"\n      }`}\n    >\n      <Container>\n        <Navbar.Brand\n          href=\"#home\"\n          className={`navbar-brand ${isDarkMode ? \"dark-mode\" : \"light-mode\"}`}\n        >\n          {currentDateTime.date} | {currentDateTime.time}\n          <span className=\"time-period\">{currentDateTime.period}</span>\n        </Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"ms-auto\">\n            <Nav.Link\n              onClick={() => scrollToSection(\"about\")}\n              className={isDarkMode ? \"text-light\" : \"text-dark\"}\n            >\n              About\n            </Nav.Link>\n            <Nav.Link\n              onClick={() => scrollToSection(\"skills\")}\n              className={isDarkMode ? \"text-light\" : \"text-dark\"}\n            >\n              Skills\n            </Nav.Link>\n            <Nav.Link\n              onClick={() => scrollToSection(\"projects\")}\n              className={isDarkMode ? \"text-light\" : \"text-dark\"}\n            >\n              Projects\n            </Nav.Link>\n            <Nav.Link\n              onClick={() => scrollToSection(\"contact\")}\n              className={isDarkMode ? \"text-light\" : \"text-dark\"}\n            >\n              Contact\n            </Nav.Link>\n            {isDarkMode ? (\n              <Button\n                variant=\"light\"\n                onClick={toggleDarkMode}\n                className=\"button day-mode ms-2\"\n              >\n                Day Mode\n              </Button>\n            ) : (\n              <Button\n                variant=\"light\"\n                onClick={toggleDarkMode}\n                className=\"button ms-2\"\n              >\n                <img src={nightmode} alt=\"Night Mode\" width=\"60\" />\n              </Button>\n            )}\n          </Nav>\n        </Navbar.Collapse>\n      </Container>\n    </Navbar>\n  );\n};\n\nexport default MyNavbar;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}