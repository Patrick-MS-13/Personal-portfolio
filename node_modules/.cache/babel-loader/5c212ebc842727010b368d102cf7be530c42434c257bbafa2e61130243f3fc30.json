{"ast":null,"code":"var _jsxFileName = \"/Users/solomonrojer/Desktop/Patrick/Personal-portfolio/src/components/Navbar.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Navbar, Nav, Container, Button } from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./../style/navbar.css\";\nimport \"./../style/darkmode.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyNavbar = ({\n  isDarkMode,\n  toggleDarkMode\n}) => {\n  _s();\n  const [currentDateTime, setCurrentDateTime] = useState({\n    date: \"\",\n    time: \"\",\n    period: \"\"\n  });\n\n  // Function to update the current date and time\n  const updateDateTime = () => {\n    const now = new Date();\n    const options = {\n      weekday: \"short\",\n      month: \"short\",\n      day: \"numeric\"\n    };\n    const formattedDate = now.toLocaleDateString(\"en-US\", options);\n    let hours = now.getHours();\n    const period = hours >= 12 ? \"PM\" : \"AM\";\n    hours = hours % 12 || 12; // Convert to 12-hour format\n    const minutes = now.getMinutes().toString().padStart(2, \"0\");\n    const seconds = now.getSeconds().toString().padStart(2, \"0\");\n    const formattedTime = `${hours}:${minutes}:${seconds}`;\n    setCurrentDateTime({\n      date: formattedDate,\n      time: formattedTime,\n      period\n    });\n  };\n\n  // Update the date and time every second\n  useEffect(() => {\n    updateDateTime(); // Initial call\n    const intervalId = setInterval(updateDateTime, 1000);\n    return () => clearInterval(intervalId);\n  }, []);\n  const scrollToSection = id => {\n    const section = document.getElementById(id);\n    if (section) {\n      section.scrollIntoView({\n        behavior: \"smooth\"\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Navbar, {\n    expand: \"lg\",\n    className: `${isDarkMode ? \"navbar-dark bg-dark\" : \"navbar-light bg-light\"}`,\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      style: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        flexWrap: \"nowarp\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Navbar.Brand, {\n        href: \"#home\",\n        className: `navbar-brand ${isDarkMode ? \"dark-mode\" : \"light-mode\"}`,\n        children: [currentDateTime.date, \" | \", currentDateTime.time, /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"time-period\",\n          children: currentDateTime.period\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Navbar.Toggle, {\n        \"aria-controls\": \"basic-navbar-nav\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Navbar.Collapse, {\n        id: \"basic-navbar-nav\",\n        children: /*#__PURE__*/_jsxDEV(Nav, {\n          className: \"ms-auto d-none d-lg-flex\",\n          children: [/*#__PURE__*/_jsxDEV(Nav.Link, {\n            onClick: () => scrollToSection(\"about\"),\n            className: isDarkMode ? \"text-light\" : \"text-dark\",\n            style: {\n              margin: \"22px\",\n              fontSize: \"30px\"\n            },\n            children: \"About\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Nav.Link, {\n            onClick: () => scrollToSection(\"skills\"),\n            className: isDarkMode ? \"text-light\" : \"text-dark\",\n            style: {\n              margin: \"22px\",\n              fontSize: \"30px\"\n            },\n            children: \"Skills\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Nav.Link, {\n            onClick: () => scrollToSection(\"projects\"),\n            className: isDarkMode ? \"text-light\" : \"text-dark\",\n            style: {\n              margin: \"22px\",\n              fontSize: \"30px\"\n            },\n            children: \"Projects\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Nav.Link, {\n            onClick: () => scrollToSection(\"contact\"),\n            className: isDarkMode ? \"text-light\" : \"text-dark\",\n            style: {\n              margin: \"22px\",\n              fontSize: \"30px\"\n            },\n            children: \"Contact\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ms-auto\",\n        children: isDarkMode ? /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"light\",\n          onClick: toggleDarkMode,\n          className: \"button day-mode\",\n          style: {\n            width: \"90\",\n            height: \"30\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              height: \"22px\",\n              paddingTop: \"3px\",\n              fontSize: \"11px\"\n            },\n            children: \"BatMan\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this), \"            \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"light\",\n          onClick: toggleDarkMode,\n          className: \"button\",\n          style: {\n            width: \"90px\",\n            height: \"30px\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              width: \"150\",\n              height: \"22px\"\n            },\n            children: \"call the batman\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(MyNavbar, \"iM7TlenigVPVd2CzLh1AB+WiVeM=\");\n_c = MyNavbar;\nexport default MyNavbar;\nvar _c;\n$RefreshReg$(_c, \"MyNavbar\");","map":{"version":3,"names":["React","useState","useEffect","Navbar","Nav","Container","Button","jsxDEV","_jsxDEV","MyNavbar","isDarkMode","toggleDarkMode","_s","currentDateTime","setCurrentDateTime","date","time","period","updateDateTime","now","Date","options","weekday","month","day","formattedDate","toLocaleDateString","hours","getHours","minutes","getMinutes","toString","padStart","seconds","getSeconds","formattedTime","intervalId","setInterval","clearInterval","scrollToSection","id","section","document","getElementById","scrollIntoView","behavior","expand","className","children","style","display","justifyContent","flexWrap","Brand","href","fileName","_jsxFileName","lineNumber","columnNumber","Toggle","Collapse","Link","onClick","margin","fontSize","variant","width","height","paddingTop","_c","$RefreshReg$"],"sources":["/Users/solomonrojer/Desktop/Patrick/Personal-portfolio/src/components/Navbar.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Navbar, Nav, Container, Button } from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./../style/navbar.css\";\nimport \"./../style/darkmode.css\";\n\nconst MyNavbar = ({ isDarkMode, toggleDarkMode }) => {\n  const [currentDateTime, setCurrentDateTime] = useState({ date: \"\", time: \"\", period: \"\" });\n\n  // Function to update the current date and time\n  const updateDateTime = () => {\n    const now = new Date();\n    const options = { weekday: \"short\", month: \"short\", day: \"numeric\" };\n    const formattedDate = now.toLocaleDateString(\"en-US\", options);\n\n    let hours = now.getHours();\n    const period = hours >= 12 ? \"PM\" : \"AM\";\n    hours = hours % 12 || 12; // Convert to 12-hour format\n    const minutes = now.getMinutes().toString().padStart(2, \"0\");\n    const seconds = now.getSeconds().toString().padStart(2, \"0\");\n\n    const formattedTime = `${hours}:${minutes}:${seconds}`;\n\n    setCurrentDateTime({ date: formattedDate, time: formattedTime, period });\n  };\n\n  // Update the date and time every second\n  useEffect(() => {\n    updateDateTime(); // Initial call\n    const intervalId = setInterval(updateDateTime, 1000);\n    return () => clearInterval(intervalId);\n  }, []);\n\n  const scrollToSection = (id) => {\n    const section = document.getElementById(id);\n    if (section) {\n      section.scrollIntoView({ behavior: \"smooth\" });\n    }\n  };\n\n  return (\n    <Navbar\n      expand=\"lg\"\n      className={`${isDarkMode ? \"navbar-dark bg-dark\" : \"navbar-light bg-light\"}`}\n    >\n      <Container style={{ display: \"flex\", justifyContent: \"center\", flexWrap: \"nowarp\" }}>\n        <Navbar.Brand\n          href=\"#home\"\n          className={`navbar-brand ${isDarkMode ? \"dark-mode\" : \"light-mode\"}`}\n        >\n          {currentDateTime.date} | {currentDateTime.time}\n          <span className=\"time-period\">{currentDateTime.period}</span>\n        </Navbar.Brand>\n\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"ms-auto d-none d-lg-flex\">\n            <Nav.Link onClick={() => scrollToSection(\"about\")} className={isDarkMode ? \"text-light\" : \"text-dark\"} style={{ margin: \"22px\", fontSize: \"30px\" }}>\n              About\n            </Nav.Link>\n            <Nav.Link onClick={() => scrollToSection(\"skills\")} className={isDarkMode ? \"text-light\" : \"text-dark\"} style={{ margin: \"22px\", fontSize: \"30px\" }}>\n              Skills\n            </Nav.Link>\n            <Nav.Link onClick={() => scrollToSection(\"projects\")} className={isDarkMode ? \"text-light\" : \"text-dark\"} style={{ margin: \"22px\", fontSize: \"30px\" }}>\n              Projects\n            </Nav.Link>\n            <Nav.Link onClick={() => scrollToSection(\"contact\")} className={isDarkMode ? \"text-light\" : \"text-dark\"} style={{ margin: \"22px\", fontSize: \"30px\" }}>\n              Contact\n            </Nav.Link>\n          </Nav>\n        </Navbar.Collapse>\n\n        {/* Button remains visible on all screen sizes */}\n        <div className=\"ms-auto\">\n          {isDarkMode ? (\n            <Button variant=\"light\" onClick={toggleDarkMode} className=\"button day-mode\" style={{ width: \"90\", height: \"30\" }}>\n              <span style={{ height: \"22px\", paddingTop: \"3px\", fontSize: \"11px\" }}>BatMan</span>            </Button>\n          ) : (\n            <Button variant=\"light\" onClick={toggleDarkMode} className=\"button\" style={{ width: \"90px\", height: \"30px\" }}>\n              <p style={{ width: \"150\", height: \"22px\" }}>call the batman</p>\n            </Button>\n          )}\n        </div>\n      </Container>\n    </Navbar>\n  );\n};\n\nexport default MyNavbar;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}